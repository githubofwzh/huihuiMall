<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kshl.huihuimall.console.dal.manualmapper.InventoryTransferManualMapper">

  <resultMap id="InventoryTransferResultMap" type="com.kshl.huihuimall.base.dal.entity.InventoryTransfer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="outhouse_id" jdbcType="INTEGER" property="outhouseId" />
    <result column="inhouse_id" jdbcType="INTEGER" property="inhouseId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
  </resultMap>

  <select id="getInventoryTransferbycode" parameterType="java.lang.String" resultMap="InventoryTransferResultMap">
    SELECT * FROM inventory_transfer  WHERE code LIKE CONCAT('%', #{code}, '%')
  </select>

  <select id="getInventoryDetail" parameterType="java.lang.String" resultType="com.kshl.huihuimall.console.controller.inventory.request.InventoryTransfRequest">
    SELECT
    it.`code`,it.create_time as createTime , it.create_user AS createUser,
    ( SELECT sh.storehouse_name   FROM   storehouse AS sh     WHERE    sh.id = it.inhouse_id  ) AS rkName,
    ( SELECT sh.storehouse_name    FROM    storehouse AS sh    WHERE   sh.id = it.outhouse_id  ) AS ckName,
    ( SELECT sh.name   FROM
    (select  st.id,ks.NAME from  storehouse st join ks_account  ks on st.manager_id=ks.id) AS sh     WHERE    sh.id = it.inhouse_id  ) AS rkPeople,
    ( SELECT sh.name    FROM
    (select  st.id,ks.NAME from  storehouse st join ks_account  ks on st.manager_id=ks.id) AS sh    WHERE   sh.id = it.outhouse_id  ) AS ckPeople
    FROM  inventory_transfer AS it
    where it.`code`=#{code}
  </select>

  <select id="queryTransferInventoryRecord" parameterType="map" resultType="map">
    SELECT *FROM inventory_transfer
    <trim prefix="where" prefixOverrides="and|or">
      <if test="code != null">
        AND code LIKE CONCAT('%', #{code}, '%')
      </if>
      <if test="status != null">
        AND status LIKE CONCAT('%', #{status}, '%')
      </if>
      <if test="startTime != null">
        <![CDATA[ AND create_time >= #{startTime, jdbcType=TIMESTAMP}]]>
      </if>
      <if test="endTime != null">
        <![CDATA[ AND create_time <= #{endTime, jdbcType=TIMESTAMP}]]>
      </if>
    </trim>
    <if test="startPage != null and pageSize != null">
      LIMIT #{startPage,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </if>
  </select>

  <select id="queryTransferInventoryRecordCount" parameterType="map" resultType="Integer">
    SELECT COUNT(*)
    FROM inventory_transfer
    <trim prefix="where" prefixOverrides="and|or">
      <if test="code != null">
        AND code LIKE CONCAT('%', #{code}, '%')
      </if>
      <if test="status != null">
        AND status LIKE CONCAT('%', #{status}, '%')
      </if>
      <if test="startTime != null">
        <![CDATA[ AND create_time >= #{startTime, jdbcType=TIMESTAMP}]]>
      </if>
      <if test="endTime != null">
        <![CDATA[ AND create_time <= #{endTime, jdbcType=TIMESTAMP}]]>
      </if>
    </trim>
  </select>

  <select id="InOutInventory" parameterType="map" resultType="map">
    SELECT
    it.*, (SELECT
    sh.storehouse_name
    FROM
    storehouse AS sh
    WHERE
    sh.id = it.inhouse_id
    ) AS rk_name,
    (SELECT
    sh.storehouse_name
    FROM
    storehouse AS sh
    WHERE
    sh.id = it.outhouse_id
    ) AS ck_name,
    (
    CASE outhouse_id
    WHEN #{storehouserId,jdbcType=INTEGER} THEN
    0
    ELSE
    1
    END
    ) AS type
    FROM
    inventory_transfer AS it
    <trim prefix="where" prefixOverrides="and|or">
      <if test="code != null">
        AND it.code LIKE CONCAT('%', #{code}, '%')
      </if>
      AND it.status IN
      <foreach collection="status" index="index" item="item" open="(" separator="," close=")">
         #{item}
      </foreach>
      <if test="storehouserId != null">
        AND (it.inhouse_id = #{storehouserId,jdbcType=INTEGER} or it.outhouse_id = #{storehouserId,jdbcType=INTEGER})
      </if>
      <if test="startTime!=null and startTime!=''">
        <if test="endTime!=null and endTime!=''">
          AND it.create_time BETWEEN DATE_FORMAT(#{startTime}, '%Y-%m-%d %H:%i:%S') AND DATE_FORMAT(#{endTime}, '%Y-%m-%d %H:%i:%S')
        </if>
      </if>
    </trim>
    ORDER BY it.create_time DESC
    <if test="startPage != null and pageSize != null">
      LIMIT #{startPage,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </if>
  </select>

  <select id="InOutInventoryCount" parameterType="map" resultType="Integer">
    SELECT
      COUNT(*)
    FROM
    inventory_transfer AS it
    <trim prefix="where" prefixOverrides="and|or">
      <if test="code != null">
        AND it.code LIKE CONCAT('%', #{code}, '%')
      </if>
      AND it.status IN
      <foreach collection="status" index="index" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
      <if test="startTime!=null and startTime!=''">
        <if test="endTime!=null and endTime!=''">
          AND it.create_time BETWEEN DATE_FORMAT(#{startTime}, '%Y-%m-%d %H:%i:%S') AND DATE_FORMAT(#{endTime}, '%Y-%m-%d %H:%i:%S')
        </if>
      </if>
      <if test="storehouserId != null">
        AND (it.inhouse_id = #{storehouserId,jdbcType=INTEGER} or it.outhouse_id = #{storehouserId,jdbcType=INTEGER})
      </if>
    </trim>
  </select>

  <select id="InOutInventoryRecord" parameterType="map" resultType="map">
    SELECT
    it.`code`,DATE_FORMAT(it.create_time, '%Y-%m-%d %H:%i') as create_time ,
    it.create_user,it.id,it.inhouse_id,it.outhouse_id,it.`status`,
    (
    SELECT
    sh.storehouse_name
    FROM
    storehouse AS sh
    WHERE
    sh.id = it.inhouse_id
    ) AS rk_name,
    (
    SELECT
    sh.storehouse_name
    FROM
    storehouse AS sh
    WHERE
    sh.id = it.outhouse_id
    ) AS ck_name
    FROM
    inventory_transfer AS it
    <trim prefix="where" prefixOverrides="and|or">
      <if test="code != null">
        AND it.code LIKE CONCAT('%', #{code}, '%')
      </if>
      <if test="status != null">
        AND it.status = #{status,jdbcType=INTEGER}
      </if>
      <if test="storehouserId != null">
        AND (it.inhouse_id = #{storehouserId,jdbcType=INTEGER} or it.outhouse_id = #{storehouserId,jdbcType=INTEGER})
      </if>

      <if test="startTime != null and startTime!=''" >
        　　AND DATE_FORMAT(it.create_time, '%Y-%m-%d')&gt;=#{startTime}
      </if>
      <if test="endTime != null and endTime!=''" >
        　　AND DATE_FORMAT(it.create_time, '%Y-%m-%d')&lt;=#{endTime}
      </if>

    </trim>
    ORDER BY it.create_time DESC
    <if test="startPage != null and pageSize != null">
      LIMIT #{startPage,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </if>
  </select>

  <select id="queryApproveInventory" parameterType="map" resultType="map">
    SELECT
    it.*, (SELECT
    sh.storehouse_name
    FROM
    storehouse AS sh
    WHERE
    sh.id = it.inhouse_id
    ) AS rk_name,
    (SELECT
    sh.storehouse_name
    FROM
    storehouse AS sh
    WHERE
    sh.id = it.outhouse_id
    ) AS ck_name
    FROM
    inventory_transfer AS it
    <trim prefix="where" prefixOverrides="and|or">
      <if test="code != null">
        AND it.code LIKE CONCAT('%', #{code}, '%')
      </if>
      <if test="status != null">
        AND it.status = #{status,jdbcType=INTEGER}
      </if>
      <if test="startTime!=null and startTime!=''">
        <if test="endTime!=null and endTime!=''">
          AND it.create_time BETWEEN DATE_FORMAT(#{startTime}, '%Y-%m-%d %H:%i:%S') AND DATE_FORMAT(#{endTime}, '%Y-%m-%d %H:%i:%S')
        </if>
      </if>
    </trim>
    ORDER BY it.create_time DESC
    <if test="startPage != null and pageSize != null">
      LIMIT #{startPage,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </if>
  </select>

  <select id="queryApproveInventoryCount" parameterType="map" resultType="Integer">
    SELECT
    COUNT(*)
    FROM
    inventory_transfer AS it
    <trim prefix="where" prefixOverrides="and|or">
      <if test="code != null">
        AND it.code LIKE CONCAT('%', #{code}, '%')
      </if>
      <if test="status != null">
        AND it.status = #{status,jdbcType=INTEGER}
      </if>
      <if test="startTime!=null and startTime!=''">
        <if test="endTime!=null and endTime!=''">
          AND it.create_time BETWEEN DATE_FORMAT(#{startTime}, '%Y-%m-%d %H:%i:%S') AND DATE_FORMAT(#{endTime}, '%Y-%m-%d %H:%i:%S')
        </if>
      </if>
    </trim>
  </select>

  <select id="InOutInventoryRecordCount" parameterType="map" resultType="Integer">
    SELECT
    COUNT(*)
    FROM
    inventory_transfer AS it
    <trim prefix="where" prefixOverrides="and|or">
      <if test="code != null">
        AND it.code LIKE CONCAT('%', #{code}, '%')
      </if>
      <if test="status != null">
        AND it.status = #{status,jdbcType=INTEGER}
      </if>
      <if test="storehouserId != null">
        AND (it.inhouse_id = #{storehouserId,jdbcType=INTEGER} or it.outhouse_id = #{storehouserId,jdbcType=INTEGER})
      </if>
      <if test="startTime!=null and startTime!=''">
        <if test="endTime!=null and endTime!=''">
          AND it.create_time BETWEEN DATE_FORMAT(#{startTime}, '%Y-%m-%d %H:%i:%S') AND DATE_FORMAT(#{endTime}, '%Y-%m-%d %H:%i:%S')
        </if>
      </if>
    </trim>
  </select>

  <update id="updateInventoryTransferBycode" parameterType="com.kshl.huihuimall.base.dal.entity.InventoryTransfer">
    UPDATE inventory_transfer
    SET
    <if test="status != null">
      status = #{status,jdbcType=INTEGER}
    </if>
    WHERE
    code =  #{code,jdbcType=VARCHAR}
  </update>

</mapper>