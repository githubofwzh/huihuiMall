package com.kshl.huihuimall.base.dal.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class LivingPayBillExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table living_pay_bill
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table living_pay_bill
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table living_pay_bill
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table living_pay_bill
     *
     * @mbg.generated
     */
    public LivingPayBillExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table living_pay_bill
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table living_pay_bill
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table living_pay_bill
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table living_pay_bill
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table living_pay_bill
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table living_pay_bill
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table living_pay_bill
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table living_pay_bill
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table living_pay_bill
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table living_pay_bill
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table living_pay_bill
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andRechargeaccountIsNull() {
            addCriterion("RechargeAccount is null");
            return (Criteria) this;
        }

        public Criteria andRechargeaccountIsNotNull() {
            addCriterion("RechargeAccount is not null");
            return (Criteria) this;
        }

        public Criteria andRechargeaccountEqualTo(String value) {
            addCriterion("RechargeAccount =", value, "rechargeaccount");
            return (Criteria) this;
        }

        public Criteria andRechargeaccountNotEqualTo(String value) {
            addCriterion("RechargeAccount <>", value, "rechargeaccount");
            return (Criteria) this;
        }

        public Criteria andRechargeaccountGreaterThan(String value) {
            addCriterion("RechargeAccount >", value, "rechargeaccount");
            return (Criteria) this;
        }

        public Criteria andRechargeaccountGreaterThanOrEqualTo(String value) {
            addCriterion("RechargeAccount >=", value, "rechargeaccount");
            return (Criteria) this;
        }

        public Criteria andRechargeaccountLessThan(String value) {
            addCriterion("RechargeAccount <", value, "rechargeaccount");
            return (Criteria) this;
        }

        public Criteria andRechargeaccountLessThanOrEqualTo(String value) {
            addCriterion("RechargeAccount <=", value, "rechargeaccount");
            return (Criteria) this;
        }

        public Criteria andRechargeaccountLike(String value) {
            addCriterion("RechargeAccount like", value, "rechargeaccount");
            return (Criteria) this;
        }

        public Criteria andRechargeaccountNotLike(String value) {
            addCriterion("RechargeAccount not like", value, "rechargeaccount");
            return (Criteria) this;
        }

        public Criteria andRechargeaccountIn(List<String> values) {
            addCriterion("RechargeAccount in", values, "rechargeaccount");
            return (Criteria) this;
        }

        public Criteria andRechargeaccountNotIn(List<String> values) {
            addCriterion("RechargeAccount not in", values, "rechargeaccount");
            return (Criteria) this;
        }

        public Criteria andRechargeaccountBetween(String value1, String value2) {
            addCriterion("RechargeAccount between", value1, value2, "rechargeaccount");
            return (Criteria) this;
        }

        public Criteria andRechargeaccountNotBetween(String value1, String value2) {
            addCriterion("RechargeAccount not between", value1, value2, "rechargeaccount");
            return (Criteria) this;
        }

        public Criteria andBillidIsNull() {
            addCriterion("BillId is null");
            return (Criteria) this;
        }

        public Criteria andBillidIsNotNull() {
            addCriterion("BillId is not null");
            return (Criteria) this;
        }

        public Criteria andBillidEqualTo(String value) {
            addCriterion("BillId =", value, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidNotEqualTo(String value) {
            addCriterion("BillId <>", value, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidGreaterThan(String value) {
            addCriterion("BillId >", value, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidGreaterThanOrEqualTo(String value) {
            addCriterion("BillId >=", value, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidLessThan(String value) {
            addCriterion("BillId <", value, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidLessThanOrEqualTo(String value) {
            addCriterion("BillId <=", value, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidLike(String value) {
            addCriterion("BillId like", value, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidNotLike(String value) {
            addCriterion("BillId not like", value, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidIn(List<String> values) {
            addCriterion("BillId in", values, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidNotIn(List<String> values) {
            addCriterion("BillId not in", values, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidBetween(String value1, String value2) {
            addCriterion("BillId between", value1, value2, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidNotBetween(String value1, String value2) {
            addCriterion("BillId not between", value1, value2, "billid");
            return (Criteria) this;
        }

        public Criteria andSaleamountIsNull() {
            addCriterion("SaleAmount is null");
            return (Criteria) this;
        }

        public Criteria andSaleamountIsNotNull() {
            addCriterion("SaleAmount is not null");
            return (Criteria) this;
        }

        public Criteria andSaleamountEqualTo(BigDecimal value) {
            addCriterion("SaleAmount =", value, "saleamount");
            return (Criteria) this;
        }

        public Criteria andSaleamountNotEqualTo(BigDecimal value) {
            addCriterion("SaleAmount <>", value, "saleamount");
            return (Criteria) this;
        }

        public Criteria andSaleamountGreaterThan(BigDecimal value) {
            addCriterion("SaleAmount >", value, "saleamount");
            return (Criteria) this;
        }

        public Criteria andSaleamountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SaleAmount >=", value, "saleamount");
            return (Criteria) this;
        }

        public Criteria andSaleamountLessThan(BigDecimal value) {
            addCriterion("SaleAmount <", value, "saleamount");
            return (Criteria) this;
        }

        public Criteria andSaleamountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SaleAmount <=", value, "saleamount");
            return (Criteria) this;
        }

        public Criteria andSaleamountIn(List<BigDecimal> values) {
            addCriterion("SaleAmount in", values, "saleamount");
            return (Criteria) this;
        }

        public Criteria andSaleamountNotIn(List<BigDecimal> values) {
            addCriterion("SaleAmount not in", values, "saleamount");
            return (Criteria) this;
        }

        public Criteria andSaleamountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SaleAmount between", value1, value2, "saleamount");
            return (Criteria) this;
        }

        public Criteria andSaleamountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SaleAmount not between", value1, value2, "saleamount");
            return (Criteria) this;
        }

        public Criteria andPaystateIsNull() {
            addCriterion("PayState is null");
            return (Criteria) this;
        }

        public Criteria andPaystateIsNotNull() {
            addCriterion("PayState is not null");
            return (Criteria) this;
        }

        public Criteria andPaystateEqualTo(Integer value) {
            addCriterion("PayState =", value, "paystate");
            return (Criteria) this;
        }

        public Criteria andPaystateNotEqualTo(Integer value) {
            addCriterion("PayState <>", value, "paystate");
            return (Criteria) this;
        }

        public Criteria andPaystateGreaterThan(Integer value) {
            addCriterion("PayState >", value, "paystate");
            return (Criteria) this;
        }

        public Criteria andPaystateGreaterThanOrEqualTo(Integer value) {
            addCriterion("PayState >=", value, "paystate");
            return (Criteria) this;
        }

        public Criteria andPaystateLessThan(Integer value) {
            addCriterion("PayState <", value, "paystate");
            return (Criteria) this;
        }

        public Criteria andPaystateLessThanOrEqualTo(Integer value) {
            addCriterion("PayState <=", value, "paystate");
            return (Criteria) this;
        }

        public Criteria andPaystateIn(List<Integer> values) {
            addCriterion("PayState in", values, "paystate");
            return (Criteria) this;
        }

        public Criteria andPaystateNotIn(List<Integer> values) {
            addCriterion("PayState not in", values, "paystate");
            return (Criteria) this;
        }

        public Criteria andPaystateBetween(Integer value1, Integer value2) {
            addCriterion("PayState between", value1, value2, "paystate");
            return (Criteria) this;
        }

        public Criteria andPaystateNotBetween(Integer value1, Integer value2) {
            addCriterion("PayState not between", value1, value2, "paystate");
            return (Criteria) this;
        }

        public Criteria andRechargestateIsNull() {
            addCriterion("RechargeState is null");
            return (Criteria) this;
        }

        public Criteria andRechargestateIsNotNull() {
            addCriterion("RechargeState is not null");
            return (Criteria) this;
        }

        public Criteria andRechargestateEqualTo(Integer value) {
            addCriterion("RechargeState =", value, "rechargestate");
            return (Criteria) this;
        }

        public Criteria andRechargestateNotEqualTo(Integer value) {
            addCriterion("RechargeState <>", value, "rechargestate");
            return (Criteria) this;
        }

        public Criteria andRechargestateGreaterThan(Integer value) {
            addCriterion("RechargeState >", value, "rechargestate");
            return (Criteria) this;
        }

        public Criteria andRechargestateGreaterThanOrEqualTo(Integer value) {
            addCriterion("RechargeState >=", value, "rechargestate");
            return (Criteria) this;
        }

        public Criteria andRechargestateLessThan(Integer value) {
            addCriterion("RechargeState <", value, "rechargestate");
            return (Criteria) this;
        }

        public Criteria andRechargestateLessThanOrEqualTo(Integer value) {
            addCriterion("RechargeState <=", value, "rechargestate");
            return (Criteria) this;
        }

        public Criteria andRechargestateIn(List<Integer> values) {
            addCriterion("RechargeState in", values, "rechargestate");
            return (Criteria) this;
        }

        public Criteria andRechargestateNotIn(List<Integer> values) {
            addCriterion("RechargeState not in", values, "rechargestate");
            return (Criteria) this;
        }

        public Criteria andRechargestateBetween(Integer value1, Integer value2) {
            addCriterion("RechargeState between", value1, value2, "rechargestate");
            return (Criteria) this;
        }

        public Criteria andRechargestateNotBetween(Integer value1, Integer value2) {
            addCriterion("RechargeState not between", value1, value2, "rechargestate");
            return (Criteria) this;
        }

        public Criteria andSordernumberIsNull() {
            addCriterion("Sordernumber is null");
            return (Criteria) this;
        }

        public Criteria andSordernumberIsNotNull() {
            addCriterion("Sordernumber is not null");
            return (Criteria) this;
        }

        public Criteria andSordernumberEqualTo(String value) {
            addCriterion("Sordernumber =", value, "sordernumber");
            return (Criteria) this;
        }

        public Criteria andSordernumberNotEqualTo(String value) {
            addCriterion("Sordernumber <>", value, "sordernumber");
            return (Criteria) this;
        }

        public Criteria andSordernumberGreaterThan(String value) {
            addCriterion("Sordernumber >", value, "sordernumber");
            return (Criteria) this;
        }

        public Criteria andSordernumberGreaterThanOrEqualTo(String value) {
            addCriterion("Sordernumber >=", value, "sordernumber");
            return (Criteria) this;
        }

        public Criteria andSordernumberLessThan(String value) {
            addCriterion("Sordernumber <", value, "sordernumber");
            return (Criteria) this;
        }

        public Criteria andSordernumberLessThanOrEqualTo(String value) {
            addCriterion("Sordernumber <=", value, "sordernumber");
            return (Criteria) this;
        }

        public Criteria andSordernumberLike(String value) {
            addCriterion("Sordernumber like", value, "sordernumber");
            return (Criteria) this;
        }

        public Criteria andSordernumberNotLike(String value) {
            addCriterion("Sordernumber not like", value, "sordernumber");
            return (Criteria) this;
        }

        public Criteria andSordernumberIn(List<String> values) {
            addCriterion("Sordernumber in", values, "sordernumber");
            return (Criteria) this;
        }

        public Criteria andSordernumberNotIn(List<String> values) {
            addCriterion("Sordernumber not in", values, "sordernumber");
            return (Criteria) this;
        }

        public Criteria andSordernumberBetween(String value1, String value2) {
            addCriterion("Sordernumber between", value1, value2, "sordernumber");
            return (Criteria) this;
        }

        public Criteria andSordernumberNotBetween(String value1, String value2) {
            addCriterion("Sordernumber not between", value1, value2, "sordernumber");
            return (Criteria) this;
        }

        public Criteria andOutertidIsNull() {
            addCriterion("OuterTid is null");
            return (Criteria) this;
        }

        public Criteria andOutertidIsNotNull() {
            addCriterion("OuterTid is not null");
            return (Criteria) this;
        }

        public Criteria andOutertidEqualTo(String value) {
            addCriterion("OuterTid =", value, "outertid");
            return (Criteria) this;
        }

        public Criteria andOutertidNotEqualTo(String value) {
            addCriterion("OuterTid <>", value, "outertid");
            return (Criteria) this;
        }

        public Criteria andOutertidGreaterThan(String value) {
            addCriterion("OuterTid >", value, "outertid");
            return (Criteria) this;
        }

        public Criteria andOutertidGreaterThanOrEqualTo(String value) {
            addCriterion("OuterTid >=", value, "outertid");
            return (Criteria) this;
        }

        public Criteria andOutertidLessThan(String value) {
            addCriterion("OuterTid <", value, "outertid");
            return (Criteria) this;
        }

        public Criteria andOutertidLessThanOrEqualTo(String value) {
            addCriterion("OuterTid <=", value, "outertid");
            return (Criteria) this;
        }

        public Criteria andOutertidLike(String value) {
            addCriterion("OuterTid like", value, "outertid");
            return (Criteria) this;
        }

        public Criteria andOutertidNotLike(String value) {
            addCriterion("OuterTid not like", value, "outertid");
            return (Criteria) this;
        }

        public Criteria andOutertidIn(List<String> values) {
            addCriterion("OuterTid in", values, "outertid");
            return (Criteria) this;
        }

        public Criteria andOutertidNotIn(List<String> values) {
            addCriterion("OuterTid not in", values, "outertid");
            return (Criteria) this;
        }

        public Criteria andOutertidBetween(String value1, String value2) {
            addCriterion("OuterTid between", value1, value2, "outertid");
            return (Criteria) this;
        }

        public Criteria andOutertidNotBetween(String value1, String value2) {
            addCriterion("OuterTid not between", value1, value2, "outertid");
            return (Criteria) this;
        }

        public Criteria andOrdertimeIsNull() {
            addCriterion("OrderTime is null");
            return (Criteria) this;
        }

        public Criteria andOrdertimeIsNotNull() {
            addCriterion("OrderTime is not null");
            return (Criteria) this;
        }

        public Criteria andOrdertimeEqualTo(Date value) {
            addCriterionForJDBCDate("OrderTime =", value, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOrdertimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("OrderTime <>", value, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOrdertimeGreaterThan(Date value) {
            addCriterionForJDBCDate("OrderTime >", value, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOrdertimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("OrderTime >=", value, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOrdertimeLessThan(Date value) {
            addCriterionForJDBCDate("OrderTime <", value, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOrdertimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("OrderTime <=", value, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOrdertimeIn(List<Date> values) {
            addCriterionForJDBCDate("OrderTime in", values, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOrdertimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("OrderTime not in", values, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOrdertimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("OrderTime between", value1, value2, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOrdertimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("OrderTime not between", value1, value2, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOperatetimeIsNull() {
            addCriterion("OperateTime is null");
            return (Criteria) this;
        }

        public Criteria andOperatetimeIsNotNull() {
            addCriterion("OperateTime is not null");
            return (Criteria) this;
        }

        public Criteria andOperatetimeEqualTo(Date value) {
            addCriterionForJDBCDate("OperateTime =", value, "operatetime");
            return (Criteria) this;
        }

        public Criteria andOperatetimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("OperateTime <>", value, "operatetime");
            return (Criteria) this;
        }

        public Criteria andOperatetimeGreaterThan(Date value) {
            addCriterionForJDBCDate("OperateTime >", value, "operatetime");
            return (Criteria) this;
        }

        public Criteria andOperatetimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("OperateTime >=", value, "operatetime");
            return (Criteria) this;
        }

        public Criteria andOperatetimeLessThan(Date value) {
            addCriterionForJDBCDate("OperateTime <", value, "operatetime");
            return (Criteria) this;
        }

        public Criteria andOperatetimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("OperateTime <=", value, "operatetime");
            return (Criteria) this;
        }

        public Criteria andOperatetimeIn(List<Date> values) {
            addCriterionForJDBCDate("OperateTime in", values, "operatetime");
            return (Criteria) this;
        }

        public Criteria andOperatetimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("OperateTime not in", values, "operatetime");
            return (Criteria) this;
        }

        public Criteria andOperatetimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("OperateTime between", value1, value2, "operatetime");
            return (Criteria) this;
        }

        public Criteria andOperatetimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("OperateTime not between", value1, value2, "operatetime");
            return (Criteria) this;
        }

        public Criteria andPaytypeIsNull() {
            addCriterion("PayType is null");
            return (Criteria) this;
        }

        public Criteria andPaytypeIsNotNull() {
            addCriterion("PayType is not null");
            return (Criteria) this;
        }

        public Criteria andPaytypeEqualTo(Integer value) {
            addCriterion("PayType =", value, "paytype");
            return (Criteria) this;
        }

        public Criteria andPaytypeNotEqualTo(Integer value) {
            addCriterion("PayType <>", value, "paytype");
            return (Criteria) this;
        }

        public Criteria andPaytypeGreaterThan(Integer value) {
            addCriterion("PayType >", value, "paytype");
            return (Criteria) this;
        }

        public Criteria andPaytypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("PayType >=", value, "paytype");
            return (Criteria) this;
        }

        public Criteria andPaytypeLessThan(Integer value) {
            addCriterion("PayType <", value, "paytype");
            return (Criteria) this;
        }

        public Criteria andPaytypeLessThanOrEqualTo(Integer value) {
            addCriterion("PayType <=", value, "paytype");
            return (Criteria) this;
        }

        public Criteria andPaytypeIn(List<Integer> values) {
            addCriterion("PayType in", values, "paytype");
            return (Criteria) this;
        }

        public Criteria andPaytypeNotIn(List<Integer> values) {
            addCriterion("PayType not in", values, "paytype");
            return (Criteria) this;
        }

        public Criteria andPaytypeBetween(Integer value1, Integer value2) {
            addCriterion("PayType between", value1, value2, "paytype");
            return (Criteria) this;
        }

        public Criteria andPaytypeNotBetween(Integer value1, Integer value2) {
            addCriterion("PayType not between", value1, value2, "paytype");
            return (Criteria) this;
        }

        public Criteria andPhoneIsNull() {
            addCriterion("Phone is null");
            return (Criteria) this;
        }

        public Criteria andPhoneIsNotNull() {
            addCriterion("Phone is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneEqualTo(String value) {
            addCriterion("Phone =", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotEqualTo(String value) {
            addCriterion("Phone <>", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneGreaterThan(String value) {
            addCriterion("Phone >", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneGreaterThanOrEqualTo(String value) {
            addCriterion("Phone >=", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneLessThan(String value) {
            addCriterion("Phone <", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneLessThanOrEqualTo(String value) {
            addCriterion("Phone <=", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneLike(String value) {
            addCriterion("Phone like", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotLike(String value) {
            addCriterion("Phone not like", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneIn(List<String> values) {
            addCriterion("Phone in", values, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotIn(List<String> values) {
            addCriterion("Phone not in", values, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneBetween(String value1, String value2) {
            addCriterion("Phone between", value1, value2, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotBetween(String value1, String value2) {
            addCriterion("Phone not between", value1, value2, "phone");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("Userid is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("Userid is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(String value) {
            addCriterion("Userid =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(String value) {
            addCriterion("Userid <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(String value) {
            addCriterion("Userid >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(String value) {
            addCriterion("Userid >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(String value) {
            addCriterion("Userid <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(String value) {
            addCriterion("Userid <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLike(String value) {
            addCriterion("Userid like", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotLike(String value) {
            addCriterion("Userid not like", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<String> values) {
            addCriterion("Userid in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<String> values) {
            addCriterion("Userid not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(String value1, String value2) {
            addCriterion("Userid between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(String value1, String value2) {
            addCriterion("Userid not between", value1, value2, "userid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table living_pay_bill
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table living_pay_bill
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}