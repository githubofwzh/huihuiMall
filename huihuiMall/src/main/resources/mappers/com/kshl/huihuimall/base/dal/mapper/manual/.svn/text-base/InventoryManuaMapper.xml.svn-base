<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kshl.huihuimall.console.dal.manualmapper.InventoryManualMapper">
    <resultMap id="InventoryResultMap" type="com.kshl.huihuimall.base.dal.entity.Inventory">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="product_id" jdbcType="INTEGER" property="productId" />
        <result column="storehouse_id" jdbcType="INTEGER" property="storehouseId" />
        <result column="onhand" jdbcType="INTEGER" property="onhand" />
    </resultMap>

    <resultMap id="OrderDetailBaseResultMap" type="com.kshl.huihuimall.console.base.pojo.OrderDetailProduct">
        <result column="number" jdbcType="INTEGER" property="number" />
        <result column="total" jdbcType="DECIMAL" property="total" />
        <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
        <result column="code" jdbcType="VARCHAR" property="code" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="price" jdbcType="DECIMAL" property="price" />
        <result column="specifications" jdbcType="VARCHAR" property="specifications" />
        <result column="measurement_unit" jdbcType="VARCHAR" property="measurementUnit" />
    </resultMap>

    <sql id="InventoryMg">
        p.*,ct.name as categorytwoName,co.name AS categoryoneName,b.name AS bandName,sh.storehouse_name,n.onhand
    </sql>

	<select id="getInventory" parameterType="map" resultType="map">
        SELECT
        <include refid="InventoryMg"/>
        FROM
        product AS p
        RIGHT JOIN inventory AS n ON p.id = n.product_id
        LEFT JOIN storehouse AS sh ON sh.id=n.storehouse_id
        LEFT JOIN brand AS b ON p.brand_id=b.id
        LEFT JOIN category_two AS ct ON p.categorytwo_id=ct.id
        LEFT JOIN category_one AS co ON p.categoryone_id=co.id
        <trim prefix="where" prefixOverrides="and|or">
            <if test="storehouseId != null">
                AND n.storehouse_id = #{storehouseId}
            </if>
            <if test="productName != null">
                AND p.name LIKE CONCAT('%', #{productName}, '%')
            </if>
            <if test="productCode != null">
                AND p.code LIKE CONCAT('%', #{productCode}, '%')
            </if>
        </trim>
        <if test="startPage != null and pageSize != null">
            LIMIT #{startPage,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <select id="getInventoryCount" parameterType="map" resultType="Integer">
        SELECT
        COUNT (*)
        FROM
        product AS p
        RIGHT JOIN inventory AS n ON p.id = n.product_id
        LEFT JOIN storehouse AS sh ON sh.id=n.storehouse_id
        LEFT JOIN brand AS b ON p.brand_id=b.id
        LEFT JOIN category_two AS ct ON p.categorytwo_id=ct.id
        LEFT JOIN category_one AS co ON p.categoryone_id=co.id
        <trim prefix="where" prefixOverrides="and|or">
            <if test="storehouseId != null">
                AND n.storehouse_id = #{storehouseId}
            </if>
            <if test="productName != null">
                AND p.name LIKE CONCAT('%', #{productName}, '%')
            </if>
            <if test="productCode != null">
                AND p.code LIKE CONCAT('%', #{productCode}, '%')
            </if>
        </trim>
    </select>





    <select id="getInventorybyProductId" parameterType="java.lang.Integer" resultType="com.kshl.huihuimall.base.dal.entity.Inventory">
         SELECT *FROM inventory WHERE product_id=#{productId}
    </select>

   <select id="getInventorybyProductIdAndhouseId" parameterType="com.kshl.huihuimall.base.dal.entity.Inventory" resultMap="InventoryResultMap">
        SELECT * FROM inventory where product_id=#{productId,jdbcType=INTEGER}
               AND storehouse_id=#{storehouseId,jdbcType=INTEGER}
   </select>

    <update id="updateInventory" parameterType="com.kshl.huihuimall.base.dal.entity.Inventory">
        update inventory
        <set>
            <if test="onhand != null">
                onhand = #{onhand,jdbcType=INTEGER}
            </if>
        </set>
        where storehouse_id = #{storehouseId,jdbcType=INTEGER} AND product_id=#{productId,jdbcType=INTEGER}
    </update>

    <update id="updateInventoryIn" parameterType="com.kshl.huihuimall.base.dal.entity.InventoryIn">
        update inventory_in SET create_time = sysdate() where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateInlink" parameterType="com.kshl.huihuimall.base.dal.entity.InventoryToProduct">
        update inventory_to_product
        <set>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER}
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="getOutInventoryRecordDetail" parameterType="java.lang.String" resultType="com.kshl.huihuimall.base.dal.entity.OutInventoryRecordDetail">
        SELECT
        io.code,
        io.create_time AS createTime,
        sh.storehouse_name AS storehouseName,
        io.status,
        so.order_number AS orderNumber,
        so.start_time AS startTime,
        so.storename AS storeName,
        so.storeaddress AS storeAddress,
        so.ordertotal as orderTotal,
        sp.phone_number AS name,sper.phone_number as shopkeeperPhone,
        io.create_user AS createUser,de.device_code as deviceCode FROM store_order AS so
        LEFT JOIN inventory_out AS io ON so.order_number = io.order_number
        LEFT JOIN storehouse AS sh ON so.storehouse_id = sh.id
        LEFT JOIN customer AS sp ON sp.id= so.user_id
        LEFT JOIN shopkeeper sper on sper.store_id=so.store_id
        LEFT JOIN device de on de.store_id=so.store_id
        WHERE so.order_number=#{orderNumber,jdbcType=VARCHAR}
    </select>

    <select id="getProductListByOrderNumber" parameterType="java.lang.String" resultType="com.kshl.huihuimall.base.dal.entity.Product">
        SELECT
            pt.id as id, pt.name as name
        FROM
            inventory_out AS io
        LEFT JOIN order_detail AS od ON io.order_number = od.order_number
        LEFT JOIN product AS pt ON pt. CODE = od. CODE
        WHERE
           io.order_number=#{orderNumber,jdbcType=VARCHAR}
    </select>


    <select id="getProductListByTranferCode" parameterType="java.lang.String" resultMap="OrderDetailBaseResultMap">
        SELECT
            p. CODE,
            p. NAME,
            p.specifications,
            p.measurement_unit,
            ip.count AS number,
            p.price
        FROM
            inventory_transfer AS io
        LEFT JOIN inventory_to_product AS ip ON ip. CODE = io. CODE
        LEFT JOIN product AS p ON p.id = ip.product_id
        WHERE
            io.code=#{code,jdbcType=VARCHAR}
    </select>

    <select id="getProductListByInventoryInId" parameterType="java.lang.Integer" resultMap="OrderDetailBaseResultMap">
        SELECT
            p. CODE,
            p. NAME,
            p.specifications,
            p.measurement_unit,
            ip.count as number,
            p.price
        FROM
            inventory_in AS io
        LEFT JOIN inventory_to_product AS ip ON ip. CODE = io. CODE
        LEFT JOIN product AS p ON p.id = ip.product_id
        WHERE
        io.id=#{id,jdbcType=INTEGER}
    </select>

    <select id="getExcangeProduct" parameterType="java.lang.String" resultType="com.kshl.huihuimall.base.dal.entity.Product">
        select  pt.id as id, pt.name as name from  inventory_out AS io
        join return_exchange_order ret on ret.order_number=io.order_number
        JOIN order_detail AS od ON ret.order_id = od.order_number
        JOIN product AS pt ON pt. CODE = od. CODE
        where ret.order_number=#{orderNumber}
        GROUP BY ret.order_number
    </select>

    <select id="getOutReturnExchangeDetail" parameterType="java.lang.String" resultType="com.kshl.huihuimall.base.dal.entity.OutInventoryRecordDetail">
        select  io.code,
        io.create_time AS createTime,
        sh.storehouse_name AS storehouseName,
        io.status,
        so.order_number AS orderNumber,
        so.start_time AS startTime,
        so.storename AS storeName,
        so.storeaddress AS storeAddress,
        so.ordertotal as orderTotal,ret.order_number,
        sp.phone_number AS name,sper.phone_number as shopkeeperPhone,
        io.create_user AS createUser,de.device_code as deviceCode
        from return_exchange_order ret join inventory_out io on ret.order_number=io.order_number
        join store_order so on so.order_number=ret.order_id
        join storehouse sh on so.storehouse_id = sh.id
        JOIN customer AS sp ON sp.id= so.user_id
        JOIN shopkeeper sper on sper.store_id=so.store_id
        JOIN device de on de.store_id=so.store_id
        WHERE ret.order_number=#{orderNumber}
    </select>

</mapper>