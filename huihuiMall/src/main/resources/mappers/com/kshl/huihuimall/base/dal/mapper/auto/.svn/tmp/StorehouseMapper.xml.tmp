<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kshl.huihuimall.base.dal.mapper.StorehouseMapper">
  <resultMap id="BaseResultMap" type="com.kshl.huihuimall.base.dal.entity.Storehouse">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="storehouse_name" jdbcType="VARCHAR" property="storehouseName" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="admin_name" jdbcType="VARCHAR" property="adminName" />
    <result column="contact_number" jdbcType="INTEGER" property="contactNumber" />
    <result column="manager_id" jdbcType="INTEGER" property="managerId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, storehouse_name, area, admin_name, contact_number, manager_id
  </sql>
  <select id="selectByExample" parameterType="com.kshl.huihuimall.base.dal.entity.StorehouseExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from storehouse
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from storehouse
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from storehouse
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kshl.huihuimall.base.dal.entity.StorehouseExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from storehouse
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.kshl.huihuimall.base.dal.entity.Storehouse" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into storehouse (storehouse_name, area, admin_name, 
      contact_number, manager_id)
    values (#{storehouseName,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, #{adminName,jdbcType=VARCHAR}, 
      #{contactNumber,jdbcType=INTEGER}, #{managerId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.kshl.huihuimall.base.dal.entity.Storehouse" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into storehouse
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="storehouseName != null">
        storehouse_name,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="adminName != null">
        admin_name,
      </if>
      <if test="contactNumber != null">
        contact_number,
      </if>
      <if test="managerId != null">
        manager_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="storehouseName != null">
        #{storehouseName,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="adminName != null">
        #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="contactNumber != null">
        #{contactNumber,jdbcType=INTEGER},
      </if>
      <if test="managerId != null">
        #{managerId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kshl.huihuimall.base.dal.entity.StorehouseExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from storehouse
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update storehouse
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.storehouseName != null">
        storehouse_name = #{record.storehouseName,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.adminName != null">
        admin_name = #{record.adminName,jdbcType=VARCHAR},
      </if>
      <if test="record.contactNumber != null">
        contact_number = #{record.contactNumber,jdbcType=INTEGER},
      </if>
      <if test="record.managerId != null">
        manager_id = #{record.managerId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update storehouse
    set id = #{record.id,jdbcType=INTEGER},
      storehouse_name = #{record.storehouseName,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=VARCHAR},
      admin_name = #{record.adminName,jdbcType=VARCHAR},
      contact_number = #{record.contactNumber,jdbcType=INTEGER},
      manager_id = #{record.managerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kshl.huihuimall.base.dal.entity.Storehouse">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update storehouse
    <set>
      <if test="storehouseName != null">
        storehouse_name = #{storehouseName,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="adminName != null">
        admin_name = #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="contactNumber != null">
        contact_number = #{contactNumber,jdbcType=INTEGER},
      </if>
      <if test="managerId != null">
        manager_id = #{managerId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kshl.huihuimall.base.dal.entity.Storehouse">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update storehouse
    set storehouse_name = #{storehouseName,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      admin_name = #{adminName,jdbcType=VARCHAR},
      contact_number = #{contactNumber,jdbcType=INTEGER},
      manager_id = #{managerId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>