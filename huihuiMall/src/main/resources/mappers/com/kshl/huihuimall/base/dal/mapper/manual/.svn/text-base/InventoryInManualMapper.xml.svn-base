<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kshl.huihuimall.console.dal.manualmapper.InventoryInManualMapper">
  <resultMap id="InventoryInResultMap" type="com.kshl.huihuimall.base.dal.entity.InventoryIn">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="storehouse_id" jdbcType="INTEGER" property="storehouseId" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>


  <sql id="InventoryMg">
    p.*,ct.name as categorytwoName,co.name AS categoryoneName,b.name AS bandName,sh.storehouse_name,ip.count,ip.id as inLineId,io.id as ioId
  </sql>

  <select id="getInventoryIn" parameterType="String" resultMap="InventoryInResultMap">
    SELECT *FROM inventory_in where code LIKE CONCAT('%', #{code}, '%')
  </select>

  <select id="getInventoryInById" parameterType="java.lang.Integer" resultType="com.kshl.huihuimall.console.base.pojo.InventoryInPojo">
        SELECT
        io. CODE as code,
        io.create_time as createTime,
        sh.storehouse_name as storehouseName,
        io. STATUS as status,
        io.create_user as createUser
    FROM
        inventory_in AS io
    LEFT JOIN storehouse AS sh ON sh.id = io.storehouse_id where io.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="queryInInventoryRecord" parameterType="map" resultType="map">
    SELECT
     p.id,p.`code`, DATE_FORMAT(p.create_time, '%Y-%m-%d') as create_time,p.create_user,p.`status`,p.storehouse_id,
     sh.storehouse_name FROM
      inventory_in AS p
      LEFT JOIN storehouse AS sh ON sh.id = p.storehouse_id
      LEFT JOIN inventory_to_product AS ip ON ip. CODE = p. CODE
    <trim prefix="where" prefixOverrides="and|or">
      <if test="code != null">
        AND p.code LIKE CONCAT('%', #{code}, '%')
      </if>
      <if test="status != null">
        AND p.status LIKE CONCAT('%', #{status}, '%')
      </if>
      <if test="storehouserId != null">
        AND p.storehouse_id =  #{storehouserId,jdbcType=INTEGER}
      </if>
      <if test="type != null">
        AND ip.type LIKE CONCAT('%', #{type}, '%')
      </if>
      <if test="startTime != null and startTime!=''" >
    　　AND DATE_FORMAT(p.create_time, '%Y-%m-%d')&gt;=#{startTime}
      </if>
      <if test="endTime != null and endTime!=''" >
        　　AND DATE_FORMAT(p.create_time, '%Y-%m-%d')&lt;=#{endTime}
      </if>
    </trim>
    ORDER BY p.create_time DESC
    <if test="startPage != null and pageSize != null">
      LIMIT #{startPage,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </if>
  </select>

  <select id="queryInInventoryRecordCount" parameterType="map" resultType="Integer">
    SELECT COUNT (*)
      FROM
      inventory_in AS p
      LEFT JOIN storehouse AS sh ON sh.id = p.storehouse_id
      LEFT JOIN inventory_to_product AS ip ON ip. CODE = p. CODE
    <trim prefix="where" prefixOverrides="and|or">
      <if test="code != null">
        AND p.code LIKE CONCAT('%', #{code}, '%')
      </if>
      <if test="status != null">
        AND p.status LIKE CONCAT('%', #{status}, '%')
      </if>
      <if test="storehouserId != null">
        AND p.storehouse_id =  #{storehouserId,jdbcType=INTEGER}
      </if>
      <if test="type != null">
        AND ip.type LIKE CONCAT('%', #{type}, '%')
      </if>
      <if test="startTime != null and startTime!=''" >
        　　AND DATE_FORMAT(p.create_time, '%Y-%m-%d')&gt;=#{startTime}
      </if>
      <if test="endTime != null and endTime!=''" >
        　　AND DATE_FORMAT(p.create_time, '%Y-%m-%d')&lt;=#{endTime}
      </if>
    </trim>
  </select>

  <select id="getInInventory" parameterType="map" resultType="map">
    SELECT
    <include refid="InventoryMg"/>
    FROM
    inventory_in AS io
    LEFT JOIN inventory_to_product AS ip ON ip. CODE = io. CODE
    LEFT JOIN product AS p ON p. id = ip. product_id
    LEFT JOIN storehouse AS sh ON sh.id = io.storehouse_id
    LEFT JOIN brand AS b ON p.brand_id = b.id
    LEFT JOIN category_two AS ct ON p.categorytwo_id = ct.id
    LEFT JOIN category_one AS co ON p.categoryone_id = co.id
    <trim prefix="where" prefixOverrides="and|or">
      <if test="storehouseId != null">
        AND io.storehouse_id = #{storehouseId}
      </if>
      <if test="productName != null">
        AND p.name LIKE CONCAT('%', #{productName}, '%')
      </if>
      <if test="productCode != null">
        AND p.code LIKE CONCAT('%', #{productCode}, '%')
      </if>
      <if test="type != null">
        AND ip.type LIKE CONCAT('%', #{type}, '%')
      </if>
    </trim>
    <if test="startPage != null and pageSize != null">
      LIMIT #{startPage,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </if>
  </select>

  <select id="getInInventoryCount" parameterType="map" resultType="Integer">
    SELECT COUNT (*)
    FROM
    inventory_in AS io
    LEFT JOIN inventory_to_product AS ip ON ip. CODE = io. CODE
    LEFT JOIN product AS p ON p. id = ip. product_id
    LEFT JOIN storehouse AS sh ON sh.id = io.storehouse_id
    LEFT JOIN brand AS b ON p.brand_id = b.id
    LEFT JOIN category_two AS ct ON p.categorytwo_id = ct.id
    LEFT JOIN category_one AS co ON p.categoryone_id = co.id
    <trim prefix="where" prefixOverrides="and|or">
      <if test="storehouseId != null">
        AND io.storehouse_id = #{storehouseId}
      </if>
      <if test="productName != null">
        AND p.name LIKE CONCAT('%', #{productName}, '%')
      </if>
      <if test="productCode != null">
        AND p.code LIKE CONCAT('%', #{productCode}, '%')
      </if>
      <if test="type != null">
        AND ip.type LIKE CONCAT('%', #{type}, '%')
      </if>
    </trim>
  </select>


</mapper>