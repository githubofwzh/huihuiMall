<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kshl.huihuimall.base.dal.manualmapper.CategoryManualMapper">

  <resultMap id="CTBrandBaseResultMap" type="com.kshl.huihuimall.console.base.pojo.CategoryToBrandPojo">
    <id column="category_two_id" jdbcType="INTEGER" property="categoryTwoId" />
    <id column="brand_id" jdbcType="INTEGER" property="brandId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>

  <select id="getAllBrand" parameterType="map" resultType="map">
    SELECT b.*, group_concat(ct.name) AS parentnames,
    group_concat(ct.id) AS parentids
    FROM brand AS b
    LEFT JOIN category_to_brand AS ctb ON b.id = ctb.brand_id
    LEFT JOIN category_two AS ct ON ct.id = ctb.category_two_id
    <trim prefix="where" prefixOverrides="and|or">
      <if test="categorytwoid != null">
        AND ctb.category_two_id = #{categorytwoid}
      </if>
      <if test="name != null">
        AND b.name LIKE CONCAT('%', #{name}, '%')
      </if>
    </trim>
    GROUP BY b.name ORDER BY b.id ASC
    <if test="startPage != null and pageSize != null">
      LIMIT #{startPage,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </if>
  </select>

  <select id="getAllBrandCount" parameterType="map" resultType="Integer">
    SELECT COUNT(*) FROM (SELECT b.*
    FROM brand AS b
    LEFT JOIN category_to_brand AS ctb ON b.id = ctb.brand_id
    LEFT JOIN category_two AS ct ON ct.id = ctb.category_two_id
    <trim prefix="where" prefixOverrides="and|or">
      <if test="categorytwoid != null">
        AND ctb.category_two_id = #{categorytwoid}
      </if>
      <if test="name != null">
        AND b.name LIKE CONCAT('%', #{name}, '%')
      </if>
    </trim>
    GROUP BY b.name) AS info
  </select>

  <select id="getAllCategoryTwoToBrand" parameterType="map" resultType="map">
    SELECT ct.name AS categorytwoname, ct.id AS categorytwoid
    FROM category_to_brand AS ctb
    LEFT JOIN brand AS b ON b.id = ctb.brand_id
    LEFT JOIN category_two AS ct ON ct.id = ctb.category_two_id
    WHERE b.id = #{brandid}
  </select>


  <select id="getAllCategoryTwo" parameterType="map" resultType="map">
    SELECT
    cw.*, co.id AS oneId,
    co.`name` AS oneName,
    co.sort AS oneSort
    FROM
    category_two cw
    LEFT JOIN category_one co ON cw.parent_id = co.id
    <trim prefix="where" prefixOverrides="and|or">
      <if test="parentId != null">
        AND cw.parent_id = #{parentId}
      </if>
      <if test="name != null">
        AND cw.name LIKE CONCAT('%', #{name}, '%')
      </if>
    </trim>
    <if test="startPage != null and pageSize != null">
      LIMIT #{startPage,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </if>
  </select>

  <select id="getAllCategoryTwoCount" parameterType="map" resultType="java.lang.Integer">
    SELECT COUNT(cw.id)
    FROM category_two cw
    LEFT JOIN category_one co ON cw.parent_id = co.id
    <trim prefix="where" prefixOverrides="and|or">
      <if test="parentId != null">
        AND cw.parent_id = #{parentId}
      </if>
      <if test="name != null">
        AND cw.name LIKE CONCAT('%', #{name}, '%')
      </if>
    </trim>
  </select>

  <delete id="deleteCToBrandByBrandId" parameterType="java.lang.Integer">

    delete from category_to_brand
    where brand_id = #{brandId,jdbcType=INTEGER}
  </delete>

  <select id="getBrandByCTId" parameterType="java.lang.Integer" resultMap="CTBrandBaseResultMap">
    SELECT ctb.category_two_id,ctb.brand_id,b.name
    FROM category_to_brand AS ctb
    LEFT JOIN brand b  ON  ctb.brand_id = b.id
    WHERE ctb.category_two_id = #{id,jdbcType=INTEGER}
  </select>

</mapper>