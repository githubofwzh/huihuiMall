<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kshl.huihuimall.console.dal.manualmapper.OrderManualMapper">

    <resultMap id="StoreOrderBaseResultMap" type="com.kshl.huihuimall.base.dal.entity.StoreOrder">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="orderstatus" jdbcType="VARCHAR" property="orderstatus" />
        <result column="merchantname" jdbcType="VARCHAR" property="merchantname" />
        <result column="storename" jdbcType="VARCHAR" property="storename" />
        <result column="storeaddress" jdbcType="VARCHAR" property="storeaddress" />
        <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
        <result column="store_id" jdbcType="INTEGER" property="storeId" />
        <result column="recom_store_id" jdbcType="INTEGER" property="recomStoreId" />
        <result column="storehouse_id" jdbcType="INTEGER" property="storehouseId" />
        <result column="shopkeeper_id" jdbcType="INTEGER" property="shopkeeperId" />
        <result column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="ent_code" jdbcType="VARCHAR" property="entCode" />
        <result column="ifdelete" jdbcType="INTEGER" property="ifdelete" />
        <result column="ordertotal" jdbcType="DECIMAL" property="ordertotal" />
        <result column="receive_time" jdbcType="TIMESTAMP" property="receiveTime" />
    </resultMap>

    <resultMap id="OrderDetailBaseResultMap" type="com.kshl.huihuimall.console.base.pojo.OrderDetailProduct">
        <result column="number" jdbcType="INTEGER" property="number" />
        <result column="total" jdbcType="DECIMAL" property="total" />
        <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
        <result column="code" jdbcType="VARCHAR" property="code" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="price" jdbcType="DECIMAL" property="price" />
        <result column="specifications" jdbcType="VARCHAR" property="specifications" />
        <result column="measurement_unit" jdbcType="VARCHAR" property="measurementUnit" />
        <result column="main_image_path" jdbcType="VARCHAR" property="mainImagePath" />
    </resultMap>

    <resultMap id="ReturnExchangeBaseResultMap" type="com.kshl.huihuimall.base.dal.entity.ReturnExchangeOrder">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
        <result column="store_id" jdbcType="INTEGER" property="storeId" />
        <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
        <result column="type" jdbcType="INTEGER" property="type" />
        <result column="product_id" jdbcType="INTEGER" property="productId" />
        <result column="count" jdbcType="DECIMAL" property="count" />
        <result column="store_name" jdbcType="VARCHAR" property="storeName" />
        <result column="order_type" jdbcType="VARCHAR" property="orderType" />
        <result column="return_status" jdbcType="INTEGER" property="returnStatus" />
        <result column="audit_status" jdbcType="INTEGER" property="auditStatus" />
        <result column="exchange_status" jdbcType="INTEGER" property="exchangeStatus" />
        <result column="warehouse_id" jdbcType="INTEGER" property="warehouseId" />
        <result column="product_name" jdbcType="VARCHAR" property="productName" />
        <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    </resultMap>

    <resultMap id="OrderProductDetailBaseResultMap" type="com.kshl.huihuimall.console.base.pojo.OrderProductPojo">
        <id column="store_id" jdbcType="INTEGER" property="storeId" />
        <result column="profit" jdbcType="DECIMAL" property="profit" />
    </resultMap>

    <resultMap id="OrderProfitBaseResultMap" type="com.kshl.huihuimall.console.base.pojo.ProfitPojo">
        <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
        <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
        <result column="total" jdbcType="DECIMAL" property="total" />
        <result column="profit" jdbcType="DECIMAL" property="profit" />
        <result column="recommend" jdbcType="DECIMAL" property="recommend" />
        <result column="consumption" jdbcType="DECIMAL" property="consumption" />
        <result column="store_id" jdbcType="INTEGER" property="storeId" />
        <result column="type" jdbcType="INTEGER" property="type" />
    </resultMap>

    <select id="getAllOrder" parameterType="map" resultType="map">
        SELECT p.*, cu.id AS cid,cu.store_id AS recomstore,cu.recommend_person_id,
        cu.phone_number ,cu.open_id
        FROM store_order AS p
        LEFT JOIN customer AS cu ON p.user_id = cu.id
        <if test="type == 1">
            join order_detail od on od.order_number=p.order_number
            join product pr on pr.`code`=od.`code`
            join merchant mer on mer.id=pr.merchant_id
            join ks_account ksa on ksa.merchant_code=mer.ent_code
        </if>

        <trim prefix="where" prefixOverrides="and|or">
            <if test="type != null">
                AND p.type= #{type}
            </if>
            <if test="orderstatus != null">
                AND p.orderstatus = #{orderstatus}
            </if>
            <if test="orderNumber != null">
                AND p.order_number = #{orderNumber}
            </if>
            <if test="storename != null">
                AND p.storename LIKE CONCAT('%', #{storename}, '%')
            </if>
            <if test="startTime != null and startTime!=''" >
                　　AND DATE_FORMAT(p.start_time, '%Y-%m-%d')&gt;=#{startTime}
            </if>
            <if test="endTime != null and endTime!=''" >
                　　AND DATE_FORMAT(p.start_time, '%Y-%m-%d')&lt;=#{endTime}
            </if>

            <if test="entCode != null">
                AND p.ent_code = #{entCode}
            </if>
            <if test="merchantname != null">
                AND p.merchantname LIKE CONCAT('%', #{merchantname}, '%')
            </if>
        </trim>
        GROUP BY p.order_number ORDER BY p.start_time DESC
        <if test="startPage != null and pageSize != null">
            LIMIT #{startPage,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <select id="getAllOrderCount" parameterType="map" resultType="java.lang.Integer">
        select COUNT(order_number) from (
        SELECT p.order_number
        FROM store_order AS p
        LEFT JOIN customer AS cu ON p.user_id = cu.id
        <if test="type == 1">
            join order_detail od on od.order_number=p.order_number
            join product pr on pr.`code`=od.`code`
            join merchant mer on mer.id=pr.merchant_id
            join ks_account ksa on ksa.merchant_code=mer.ent_code
        </if>
        <trim prefix="where" prefixOverrides="and|or">
            <if test="type != null">
                AND p.type= #{type}
            </if>
            <if test="orderstatus != null">
                AND p.orderstatus = #{orderstatus}
            </if>
            <if test="orderNumber != null">
                AND p.order_number = #{orderNumber}
            </if>
            <if test="storename != null">
                AND p.storename LIKE CONCAT('%', #{storename}, '%')
            </if>

            <if test="startTime != null and startTime!=''" >
                　　AND DATE_FORMAT(p.start_time, '%Y-%m-%d')&gt;=#{startTime}
            </if>
            <if test="endTime != null and endTime!=''" >
                　　AND DATE_FORMAT(p.start_time, '%Y-%m-%d')&lt;=#{endTime}
            </if>
            <if test="entCode != null">
                AND p.ent_code = #{entCode}
            </if>
            <if test="merchantname != null">
                AND p.merchantname LIKE CONCAT('%', #{merchantname}, '%')
            </if>
        </trim>
        GROUP BY p.order_number) as c
    </select>

    <select id="getOrderByOrderNumber" parameterType="java.lang.String" resultMap="StoreOrderBaseResultMap">
        SELECT p.*
        FROM store_order AS p
        WHERE  p.order_number= #{orderNumber}

    </select>

   <select id="getOrderDetail" parameterType="java.lang.String" resultMap="OrderDetailBaseResultMap">
       SELECT
       o.order_number,
       o.number,
       o.total,
       p.`code`,
       p.`name`,
       p.specifications,
       p.price,
       p.measurement_unit,
       p.main_image_path,sto.ordertotal
       FROM
       order_detail AS o
       LEFT JOIN product AS p ON o. CODE = p. CODE
       LEFT JOIN store_order sto on sto.order_number=o.order_number
        WHERE
            o.order_number = #{orderNumber}
    </select>

    <select id="sendOrder" parameterType="map" resultType="map">
        SELECT p.*  FROM store_order AS p
        <trim prefix="where" prefixOverrides="and|or">

            <if test="orderstatus != null">
                AND p.orderstatus = #{orderstatus}
            </if>
            <if test="orderNumber != null">
                AND p.order_number = #{orderNumber}
            </if>
            <if test="storename != null">
                AND p.storename LIKE CONCAT('%', #{storename}, '%')
            </if>
        </trim>
        <if test="startPage != null and pageSize != null">
            LIMIT #{startPage,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <select id="getAllsendOrder" parameterType="map" resultType="java.lang.Integer">
        SELECT COUNT(p.id)
        FROM store_order AS p
        <trim prefix="where" prefixOverrides="and|or">
            <if test="orderstatus != null">
                AND p.orderstatus = #{orderstatus}
            </if>
            <if test="orderNumber != null">
                AND p.order_number = #{orderNumber}
            </if>
            <if test="storename != null">
                AND p.storename LIKE CONCAT('%', #{storename}, '%')
            </if>
        </trim>

    </select>

    <select id="queryReturnExchangeOrder" parameterType="map" resultType="map">
        select ret.order_number,ret.order_id,c.phone_number,sto.start_time,ret.order_time,
        sto.storename,p.`name`,ret.count,p.price,p.price*ret.count as tatol,ret.type
        from return_exchange_order ret join store_order sto on
        ret.order_id=sto.order_number join customer c on c.id=sto.user_id
        join product p on p.id=ret.product_id and ret.audit_status=0
        <trim prefix="where" prefixOverrides="and|or">
            <if test="type != null">
                AND ret.type= #{type}
            </if>

            <if test="orderNumber != null">
                AND ret.order_number = #{orderNumber}
            </if>
            <if test="storeName != null">
                AND ret.store_name LIKE CONCAT('%', #{storeName}, '%')
            </if>
            <if test="orderType != null">
                AND ret.order_type = #{orderType}
            </if>
            <if test="auditStatus != null">
                AND ret.audit_status = #{auditStatus}
            </if>
        </trim>
        <if test="startPage != null and pageSize != null">
            LIMIT #{startPage,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <select id="queryReturnExchangeOrderCount" parameterType="map" resultType="java.lang.Integer">
        select COUNT(ret.id) from return_exchange_order ret join store_order sto on
        ret.order_id=sto.order_number join customer c on c.id=sto.user_id
        join product p on p.id=ret.product_id and ret.audit_status=0
        <trim prefix="where" prefixOverrides="and|or">
            <if test="type != null">
                AND ret.type= #{type}
            </if>
            <if test="orderNumber != null">
                AND ret.order_number = #{orderNumber}
            </if>
            <if test="storeName != null">
                AND ret.store_name LIKE CONCAT('%', #{storeName}, '%')
            </if>
            <if test="orderType != null">
                AND ret.order_type = #{orderType}
            </if>
            <if test="auditStatus != null">
                AND ret.audit_status = #{auditStatus}
            </if>
        </trim>

    </select>

    <!--  后台退换货详情  -->
    <select id="getRExchangeOrderByOrderNumber" parameterType="map" resultType="map">
        select ret.order_number,ret.order_id,c.phone_number,sto.start_time,ret.order_time,
        sto.storename,p.`name`,ret.count,p.price,p.price*ret.count as tatol,ret.type,
        p.main_image_path,sto.storeaddress,p.specifications,p.measurement_unit,
        ret.reason,p.`code`,sto.ordertotal,ret.return_img
        from return_exchange_order ret join store_order sto on
        ret.order_id=sto.order_number join customer c on c.id=sto.user_id
        join product p on p.id=ret.product_id
        where ret.order_number=#{orderNumber}
    </select>

    <select id="getOrderById" parameterType="java.lang.String" resultType="com.kshl.huihuimall.base.dal.entity.StoreOrder">
        SELECT *FROM store_order where order_number LIKE CONCAT('%', #{orderid}, '%')
    </select>

    <select id="queryOutInventory" parameterType="map" resultType="map">
        SELECT io.`code`,io.`status`,sh.storehouse_name,  io.create_user,DATE_FORMAT(io.create_time, '%Y-%m-%d %H:%i') as create_time,
        DATE_FORMAT(so.start_time, '%Y-%m-%d %H:%i') as start_time,so.storename,so.order_number,so.ordertotal
         FROM store_order as so
         JOIN inventory_out AS io ON so.order_number = io.order_number
         JOIN storehouse AS sh ON so.storehouse_id = sh.id
        <trim prefix="where" prefixOverrides="and|or">
          <if test="orderStatus!=null">
              AND so.orderstatus=#{orderStatus,jdbcType=INTEGER}
          </if>
           <if test="type!=null">
                AND so.type=#{type,jdbcType=INTEGER}
           </if>
            <if test="storehouserId!=null">
                AND so.storehouse_id=#{storehouserId,jdbcType=INTEGER}
            </if>
            <if test="code!=null">
                AND io.code=#{code,jdbcType=INTEGER}
            </if>
            <if test="status!=null">
                AND io.status=#{status,jdbcType=INTEGER}
            </if>
            <if test="orderStatus!=null">
                AND so.orderstatus=#{orderStatus,jdbcType=INTEGER}
            </if>
            <if test="storeHouse!=null">
                AND sh.storehouse_name=#{storeHouse,jdbcType=INTEGER}
            </if>
            <if test="orderStatus==null">
                <if test="startTime != null and startTime!=''" >
                    　　AND DATE_FORMAT(io.create_time, '%Y-%m-%d')&gt;=#{startTime}
                </if>
                <if test="endTime != null and endTime!=''" >
                    　　AND DATE_FORMAT(io.create_time, '%Y-%m-%d')&lt;=#{endTime}
                </if>
            </if>
            <if test="orderStatus!=null">
                <if test="startTime != null and startTime!=''" >
                    　　AND DATE_FORMAT(so.start_time, '%Y-%m-%d')&gt;=#{startTime}
                </if>
                <if test="endTime != null and endTime!=''" >
                    　　AND DATE_FORMAT(so.start_time, '%Y-%m-%d')&lt;=#{endTime}
                </if>
            </if>
        </trim>
        <if test="orderStatus==null">
            ORDER BY io.create_time DESC
        </if>
        <if test="orderStatus!=null">
            ORDER BY so.start_time DESC
        </if>
        <if test="startPage != null and pageSize != null">
            LIMIT #{startPage,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <select id="queryOutInventoryCount" parameterType="map" resultType="Integer">
        SELECT COUNT(*) FROM store_order as so
         JOIN inventory_out AS io ON so.order_number = io.order_number
         JOIN storehouse AS sh ON so.storehouse_id = sh.id
         JOIN order_detail AS od ON so.order_number = od.order_number
        <trim prefix="where" prefixOverrides="and|or">
            <if test="orderstatus!=null">
                AND so.orderstatus=#{orderstatus,jdbcType=INTEGER}
            </if>
            <if test="type!=null">
                AND so.type=#{type,jdbcType=INTEGER}
            </if>
            <if test="StorehouserId!=null">
                AND so.storehouse_id=#{StorehouserId,jdbcType=INTEGER}
            </if>
            <if test="code!=null">
                AND io.code=#{code,jdbcType=INTEGER}
            </if>
            <if test="status!=null">
                AND io.status=#{status,jdbcType=INTEGER}
            </if>
            <if test="orderStatus!=null">
                AND so.orderstatus=#{orderStatus,jdbcType=INTEGER}
            </if>
            <if test="storeHouse!=null">
                AND sh.storehouse_name=#{storeHouse,jdbcType=INTEGER}
            </if>
            <if test="startTime != null and startTime!=''" >
                　　AND DATE_FORMAT(io.create_time, '%Y-%m-%d')&gt;=#{startTime}
            </if>
            <if test="endTime != null and endTime!=''" >
                　　AND DATE_FORMAT(io.create_time, '%Y-%m-%d')&lt;=#{endTime}
            </if>
        </trim>
    </select>

    <update id="updateStoreOrder" parameterType="com.kshl.huihuimall.base.dal.entity.StoreOrder">
      update store_order
        SET orderstatus = #{orderstatus,jdbcType=VARCHAR}
      where order_number = #{orderNumber,jdbcType=VARCHAR}
    </update>

    <select id="getOrderProfit" parameterType="com.kshl.huihuimall.portal.controller.request.ProfitRequest" resultMap="OrderProfitBaseResultMap">
         SELECT
        so.order_number,
        sp.phone_number,
        so.start_time,
        so.ordertotal as total,
        so.store_id,
        (
            (
                IFNULL(pt.price, 0) - IFNULL(pt.purchase_price, 0) - IFNULL(pt.packing_price, 0) - IFNULL(pt.material_price, 0) - IFNULL(pt.transport_price, 0)
            ) * IFNULL(od.number, 0)
        ) AS profit
    FROM
        store_order AS so
    LEFT JOIN order_detail AS od ON od.order_number = so.order_number
    LEFT JOIN customer AS sp ON sp.id = so.user_id
    LEFT JOIN product AS pt ON pt. CODE = od. CODE
    WHERE
        so.store_id = #{storeId,jdbcType=INTEGER}
        AND so.order_number = #{orderNumber,jdbcType=VARCHAR}
    </select>

    <select id="getOrderProfitList" parameterType="com.kshl.huihuimall.portal.controller.request.ProfitRequest" resultMap="OrderProfitBaseResultMap">
        SELECT
            so.order_number,
            sp.phone_number,
            so.start_time,
            so.ordertotal AS total,
            so.store_id,
            pd.type,
            pd.profit
        FROM
            store_order AS so
        LEFT JOIN customer AS sp ON sp.id = so.user_id
        LEFT JOIN profit_record AS pd ON pd.order_number = so.order_number
        WHERE
            pd.store_id = #{storeId,jdbcType=INTEGER}
        AND pd.type = #{type,jdbcType=INTEGER}
        AND pd.status = #{status,jdbcType=INTEGER}
        AND so.start_time BETWEEN DATE_FORMAT(#{startTime}, '%Y-%m-%d %H:%i:%S') AND DATE_FORMAT(#{endTime}, '%Y-%m-%d %H:%i:%S')
    </select>



    <select id="exchengOutInventory" parameterType="map" resultType="map">
        SELECT io.`code`,io.`status`,sh.storehouse_name,  io.create_user,DATE_FORMAT(io.create_time, '%Y-%m-%d %H:%i') as create_time,
        DATE_FORMAT(so.start_time, '%Y-%m-%d %H:%i') as start_time,so.storename,ret.order_number as orderNumber,od.*
        FROM store_order as so
        JOIN storehouse AS sh ON so.storehouse_id = sh.id
        join return_exchange_order ret on so.order_number=ret.order_id
        JOIN inventory_out AS io ON ret.order_number = io.order_number
        join  order_detail od on od.order_number=so.order_number
        where ret.exchange_status IS NOT NULL
        <if test="retType==4">
                AND ret.exchange_status=0
            </if>
            <if test="orderstatus!=null">
                AND so.orderstatus=#{orderstatus,jdbcType=INTEGER}
            </if>
            <if test="type!=null">
                AND so.type=#{type,jdbcType=INTEGER}
            </if>
            <if test="storehouserId!=null">
                AND so.storehouse_id=#{storehouserId,jdbcType=INTEGER}
            </if>
            <if test="code!=null">
                AND io.code=#{code,jdbcType=INTEGER}
            </if>
            <if test="status!=null">
                AND io.status=#{status,jdbcType=INTEGER}
            </if>
            <if test="orderStatus!=null">
                AND so.orderstatus=#{orderStatus,jdbcType=INTEGER}
            </if>
            <if test="storeHouse!=null">
                AND sh.storehouse_name=#{storeHouse,jdbcType=INTEGER}
            </if>
            <if test="startTime != null and startTime!=''" >
                　　AND DATE_FORMAT(so.start_time, '%Y-%m-%d')&gt;=#{startTime}
            </if>
            <if test="endTime != null and endTime!=''" >
                　　AND DATE_FORMAT(so.start_time, '%Y-%m-%d')&lt;=#{endTime}
            </if>
        GROUP BY ret.order_number ORDER BY io.create_time DESC
        <if test="startPage != null and pageSize != null">
            LIMIT #{startPage,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <select id="exchengOutInventoryCount" parameterType="map" resultType="Integer">
        select count(*)  from
        (SELECT ret.order_number
        FROM store_order as so
        JOIN storehouse AS sh ON so.storehouse_id = sh.id
        join return_exchange_order ret on so.order_number=ret.order_id
        JOIN inventory_out AS io ON ret.order_number = io.order_number
        join  order_detail od on od.order_number=so.order_number
        where ret.exchange_status IS NOT NULL
            <if test="retType==4">
                AND ret.exchange_status=0
            </if>
            <if test="orderstatus!=null">
                AND so.orderstatus=#{orderstatus,jdbcType=INTEGER}
            </if>
            <if test="type!=null">
                AND so.type=#{type,jdbcType=INTEGER}
            </if>
            <if test="StorehouserId!=null">
                AND so.storehouse_id=#{StorehouserId,jdbcType=INTEGER}
            </if>
            <if test="code!=null">
                AND io.code=#{code,jdbcType=INTEGER}
            </if>
            <if test="status!=null">
                AND io.status=#{status,jdbcType=INTEGER}
            </if>
            <if test="orderStatus!=null">
                AND so.orderstatus=#{orderStatus,jdbcType=INTEGER}
            </if>
            <if test="storeHouse!=null">
                AND sh.storehouse_name=#{storeHouse,jdbcType=INTEGER}
            </if>
            <if test="startTime != null and startTime!=''" >
                　　AND DATE_FORMAT(so.start_time, '%Y-%m-%d')&gt;=#{startTime}
            </if>
            <if test="endTime != null and endTime!=''" >
                　　AND DATE_FORMAT(so.start_time, '%Y-%m-%d')&lt;=#{endTime}
            </if>

        GROUP BY ret.order_number) as yy
    </select>


    <select id="ReturnExchengDetail" parameterType="java.lang.String" resultMap="OrderDetailBaseResultMap">
        SELECT
        o.order_number,
        o.number,
        o.total,
        p.`code`,
        p.`name`,
        p.specifications,
        p.price,
        p.measurement_unit,
        p.main_image_path,sto.ordertotal
        FROM
        order_detail AS o
        JOIN product AS p ON o. CODE = p. CODE
        JOIN store_order sto on sto.order_number=o.order_number
        join   return_exchange_order ret on ret.order_id=sto.order_number
        WHERE
        ret.order_number =#{orderNumber}  GROUP BY sto.order_number
    </select>

    <update id="updateReturnExchange" parameterType="com.kshl.huihuimall.base.dal.entity.ReturnExchangeOrder">
        update return_exchange_order
        SET exchange_status = 1
        where order_number = #{orderNumber,jdbcType=VARCHAR}
    </update>

    <update id="updateOrderProfit" parameterType="java.lang.String">
        update profit_record
        <set>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where order_number = #{orderNumber,jdbcType=VARCHAR}
  </update>
</mapper>